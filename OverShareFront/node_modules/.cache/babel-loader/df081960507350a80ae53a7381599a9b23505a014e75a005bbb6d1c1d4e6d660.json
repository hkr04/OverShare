{"ast":null,"code":"import Footer from \"@/components/Footer.vue\";\nexport default {\n  name: \"ActivityList\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 4,\n      // 每页显示的个数\n      total: 0,\n      name: null\n    };\n  },\n  props: {\n    type: null,\n    span: null\n  },\n  mounted() {\n    this.load(1);\n    this.startCountdown();\n  },\n  // methods：本页面所有的点击事件或者其他函数定义区\n  methods: {\n    goDetail(id) {\n      window.open('/front/ActivityDetail?activityId=' + id);\n    },\n    load(pageNum) {\n      // 分页查询\n      let url;\n      switch (this.type) {\n        case 'user':\n          url = '/activity/selectUser';\n          break;\n        case 'like':\n          url = '/activity/selectLike';\n          break;\n        case 'collect':\n          url = '/activity/selectCollect';\n          break;\n        case 'comment':\n          url = '/activity/selectComment';\n          break;\n        default:\n          url = '/activity/selectPage';\n      }\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get(url, {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          host: this.host\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n        this.updateCountdown();\n      });\n    },\n    reset() {\n      this.name = null;\n      this.host = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    startCountdown() {\n      setInterval(this.updateCountdown, 1000);\n    },\n    updateCountdown() {\n      const now = new Date();\n      this.tableData.forEach(item => {\n        const applyEndTime = new Date(item.applyend);\n        if (applyEndTime > now) {\n          const applyRemainingTime = this.calculateRemainingTime(now, applyEndTime);\n          this.$set(item, 'applyRemainingDays', applyRemainingTime.days);\n          this.$set(item, 'applyRemainingHours', applyRemainingTime.hours);\n          this.$set(item, 'isApplyEnd', false);\n        } else {\n          this.$set(item, 'applyRemainingDays', 0);\n          this.$set(item, 'applyRemainingHours', 0);\n          this.$set(item, 'isApplyEnd', true);\n        }\n        const endTime = new Date(item.end);\n        if (endTime > now) {\n          const remainingTime = this.calculateRemainingTime(now, endTime);\n          this.$set(item, 'remainingDays', remainingTime.days);\n          this.$set(item, 'remainingHours', remainingTime.hours);\n          this.$set(item, 'isEndActivity', false);\n        } else {\n          this.$set(item, 'remainingDays', 0);\n          this.$set(item, 'remainingHours', 0);\n          this.$set(item, 'isEndActivity', true);\n        }\n      });\n    },\n    calculateRemainingTime(startTime, endTime) {\n      const diff = endTime - startTime;\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n      const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      return {\n        days,\n        hours\n      };\n    }\n  }\n};","map":{"version":3,"names":["Footer","name","data","tableData","pageNum","pageSize","total","props","type","span","mounted","load","startCountdown","methods","goDetail","id","window","open","url","$request","get","params","host","then","res","list","updateCountdown","reset","handleCurrentChange","setInterval","now","Date","forEach","item","applyEndTime","applyend","applyRemainingTime","calculateRemainingTime","$set","days","hours","endTime","end","remainingTime","startTime","diff","Math","floor"],"sources":["src/components/ActivityList.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"10\" v-if=\"total\">\r\n      <el-col :span=\"12\" v-for=\"item in tableData\" :key=\"item.id\">\r\n        <div class=\"card\" style=\"margin-bottom: 10px; cursor: pointer\" @click=\"goDetail(item.id)\">\r\n          <img :src=\"item.cover\" style=\"width: 100%; height: 250px;border-radius: 5px\" alt=\"\">\r\n          <div style=\"margin: 10px 0; font-weight: bold;width: 100%; height: 35px;font-size:15px;\">{{ item.name }}</div>\r\n          <div style=\"display: flex; align-items: center\">\r\n            <div style=\"flex: 1\">\r\n              <div><i class=\"el-icon-time\" style=\"margin-right: 5px\"></i>报名时间：{{ item.applystart }} - {{ item.applyend }} </div>\r\n              <div v-if=\"!item.isApplyEnd\" class=\"countdown\">\r\n                <div class=\"countdown-block\">\r\n                  <div class=\"countdown-value\">{{ item.applyRemainingDays }}天 | {{ item.applyRemainingHours }}小时</div>\r\n                </div>\r\n              </div>\r\n              <div v-else style=\"color: gray; font-weight: bold;\">\r\n                报名已结束\r\n              </div>\r\n              <div><i class=\"el-icon-time\" style=\"margin-right: 5px\"></i>比赛时间：{{ item.start }} - {{ item.end }}</div>\r\n              <div v-if=\"!item.isEndActivity\" class=\"countdown\">\r\n                <div class=\"countdown-block\">\r\n                  <div class=\"countdown-value\">{{ item.remainingDays }}天 | {{ item.remainingHours }}小时</div>\r\n                </div>\r\n              </div>\r\n              <div v-else style=\"color: gray; font-weight: bold;\">\r\n                已结束\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <el-button type=\"primary\" disabled v-if=\"item.isEndActivity\" key=\"已结束\">已结束</el-button>\r\n              <el-button type=\"primary\" disabled v-else-if=\"item.isSign\" key=\"已报名\">已报名</el-button>\r\n              <el-button type=\"primary\" v-else key=\"报 名\">报 名</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n    <div class=\"card\" v-if=\"total === 0\" style=\"text-align: center; font-size: 16px; color: #666\">暂无数据</div>\r\n    <div class=\"card\" style=\"padding: 10px\" v-if=\"total\">\r\n      <el-pagination\r\n          background\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          :page-sizes=\"[4, 8, 12]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, prev, pager, next\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n\r\n      <Footer></Footer>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Footer from \"@/components/Footer.vue\";\r\n\r\nexport default {\r\n  name: \"ActivityList\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 4,  // 每页显示的个数\r\n      total: 0,\r\n      name: null,\r\n    }\r\n  },\r\n  props:{\r\n    type: null,\r\n    span:null\r\n  },\r\n  mounted() {\r\n    this.load(1)\r\n    this.startCountdown()\r\n  },\r\n  // methods：本页面所有的点击事件或者其他函数定义区\r\n  methods: {\r\n    goDetail(id) {\r\n      window.open('/front/ActivityDetail?activityId=' + id)\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      let url\r\n      switch (this.type) {\r\n        case 'user':\r\n          url = '/activity/selectUser';\r\n          break;\r\n        case 'like':\r\n          url = '/activity/selectLike';\r\n          break;\r\n        case 'collect':\r\n          url = '/activity/selectCollect';\r\n          break;\r\n        case 'comment':\r\n          url = '/activity/selectComment';\r\n          break;\r\n        default:\r\n          url = '/activity/selectPage';\r\n      }\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get(url, {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          name: this.name,\r\n          host: this.host\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n        this.updateCountdown()\r\n      })\r\n    },\r\n    reset() {\r\n      this.name = null\r\n      this.host = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    startCountdown() {\r\n      setInterval(this.updateCountdown, 1000);\r\n    },\r\n    updateCountdown() {\r\n      const now = new Date();\r\n      this.tableData.forEach(item => {\r\n        const applyEndTime = new Date(item.applyend);\r\n        if (applyEndTime > now) {\r\n          const applyRemainingTime = this.calculateRemainingTime(now, applyEndTime);\r\n          this.$set(item, 'applyRemainingDays', applyRemainingTime.days);\r\n          this.$set(item, 'applyRemainingHours', applyRemainingTime.hours);\r\n          this.$set(item, 'isApplyEnd', false);\r\n        } else {\r\n          this.$set(item, 'applyRemainingDays', 0);\r\n          this.$set(item, 'applyRemainingHours', 0);\r\n          this.$set(item, 'isApplyEnd', true);\r\n        }\r\n\r\n        const endTime = new Date(item.end);\r\n        if (endTime > now) {\r\n          const remainingTime = this.calculateRemainingTime(now, endTime);\r\n          this.$set(item, 'remainingDays', remainingTime.days);\r\n          this.$set(item, 'remainingHours', remainingTime.hours);\r\n          this.$set(item, 'isEndActivity', false);\r\n        } else {\r\n          this.$set(item, 'remainingDays', 0);\r\n          this.$set(item, 'remainingHours', 0);\r\n          this.$set(item, 'isEndActivity', true);\r\n        }\r\n      });\r\n    },\r\n    calculateRemainingTime(startTime, endTime) {\r\n      const diff = endTime - startTime;\r\n      const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n      const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      return { days, hours };\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.countdown {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.countdown-block {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 120px;\r\n  height: 30px;\r\n  border: 2px solid #dbe4e7cc;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.countdown-value {\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAuDA,OAAAA,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;IACA;EACA;EACAM,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IACA,KAAAC,cAAA;EACA;EACA;EACAC,OAAA;IACAC,SAAAC,EAAA;MACAC,MAAA,CAAAC,IAAA,uCAAAF,EAAA;IACA;IACAJ,KAAAP,OAAA;MAAA;MACA,IAAAc,GAAA;MACA,aAAAV,IAAA;QACA;UACAU,GAAA;UACA;QACA;UACAA,GAAA;UACA;QACA;UACAA,GAAA;UACA;QACA;UACAA,GAAA;UACA;QACA;UACAA,GAAA;MACA;MACA,IAAAd,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAe,QAAA,CAAAC,GAAA,CAAAF,GAAA;QACAG,MAAA;UACAjB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA,IAAA;UACAqB,IAAA,OAAAA;QACA;MACA,GAAAC,IAAA,CAAAC,GAAA;QACA,KAAArB,SAAA,GAAAqB,GAAA,CAAAtB,IAAA,EAAAuB,IAAA;QACA,KAAAnB,KAAA,GAAAkB,GAAA,CAAAtB,IAAA,EAAAI,KAAA;QACA,KAAAoB,eAAA;MACA;IACA;IACAC,MAAA;MACA,KAAA1B,IAAA;MACA,KAAAqB,IAAA;MACA,KAAAX,IAAA;IACA;IACAiB,oBAAAxB,OAAA;MACA,KAAAO,IAAA,CAAAP,OAAA;IACA;IACAQ,eAAA;MACAiB,WAAA,MAAAH,eAAA;IACA;IACAA,gBAAA;MACA,MAAAI,GAAA,OAAAC,IAAA;MACA,KAAA5B,SAAA,CAAA6B,OAAA,CAAAC,IAAA;QACA,MAAAC,YAAA,OAAAH,IAAA,CAAAE,IAAA,CAAAE,QAAA;QACA,IAAAD,YAAA,GAAAJ,GAAA;UACA,MAAAM,kBAAA,QAAAC,sBAAA,CAAAP,GAAA,EAAAI,YAAA;UACA,KAAAI,IAAA,CAAAL,IAAA,wBAAAG,kBAAA,CAAAG,IAAA;UACA,KAAAD,IAAA,CAAAL,IAAA,yBAAAG,kBAAA,CAAAI,KAAA;UACA,KAAAF,IAAA,CAAAL,IAAA;QACA;UACA,KAAAK,IAAA,CAAAL,IAAA;UACA,KAAAK,IAAA,CAAAL,IAAA;UACA,KAAAK,IAAA,CAAAL,IAAA;QACA;QAEA,MAAAQ,OAAA,OAAAV,IAAA,CAAAE,IAAA,CAAAS,GAAA;QACA,IAAAD,OAAA,GAAAX,GAAA;UACA,MAAAa,aAAA,QAAAN,sBAAA,CAAAP,GAAA,EAAAW,OAAA;UACA,KAAAH,IAAA,CAAAL,IAAA,mBAAAU,aAAA,CAAAJ,IAAA;UACA,KAAAD,IAAA,CAAAL,IAAA,oBAAAU,aAAA,CAAAH,KAAA;UACA,KAAAF,IAAA,CAAAL,IAAA;QACA;UACA,KAAAK,IAAA,CAAAL,IAAA;UACA,KAAAK,IAAA,CAAAL,IAAA;UACA,KAAAK,IAAA,CAAAL,IAAA;QACA;MACA;IACA;IACAI,uBAAAO,SAAA,EAAAH,OAAA;MACA,MAAAI,IAAA,GAAAJ,OAAA,GAAAG,SAAA;MACA,MAAAL,IAAA,GAAAO,IAAA,CAAAC,KAAA,CAAAF,IAAA;MACA,MAAAL,KAAA,GAAAM,IAAA,CAAAC,KAAA,CAAAF,IAAA;MACA;QAAAN,IAAA;QAAAC;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}