{"ast":null,"code":"export default {\n  name: \"Certification\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      userList: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      address: null,\n      cardNo: null,\n      phone: null,\n      userId: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      rules: {}\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/certification/update' : '/certification/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              console.log(res.code);\n              console.log(res.msg);\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/certification/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/certification/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/certification/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          phone: this.phone,\n          cardNo: this.cardNo\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.cardNo = null;\n      this.phone = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","userList","pageNum","pageSize","total","address","cardNo","phone","userId","fromVisible","form","user","JSON","parse","localStorage","getItem","ids","rules","created","load","methods","handleEdit","row","stringify","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","console","log","msg","error","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Certification.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入名字查询\" style=\"width: 200px;margin-right: 5px\" v-model=\"name\"></el-input>\n      <el-input placeholder=\"请输入身份证号查询\" style=\"width: 200px;margin-right: 5px\" v-model=\"cardNo\"></el-input>\n      <el-input placeholder=\"请输入电话查询\" style=\"width: 200px\" v-model=\"phone\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"userId\" label=\"账号\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"name\" label=\"名字\"></el-table-column>\n        <el-table-column prop=\"avatar\" label=\"本人照片\">\n          <template v-slot=\"scope\">\n            <el-image :src=\"scope.row.avatar\" style=\"width: 50px; border-radius: 5px\"\n                      :preview-src-list=\"[scope.row.avatar]\"></el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"phone\" label=\"联系电话\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"地址\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"cardNo\" label=\"身份证号码\"></el-table-column>\n        <el-table-column prop=\"card1\" label=\"身份证正面\">\n          <template v-slot=\"scope\">\n            <el-image :src=\"scope.row.card1\" style=\"width: 50px; border-radius: 5px\"\n                      :preview-src-list=\"[scope.row.card1]\"></el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"card2\" label=\"身份证反面\">\n          <template v-slot=\"scope\">\n            <el-image :src=\"scope.row.card2\" style=\"width: 50px; border-radius: 5px\"\n                      :preview-src-list=\"[scope.row.card2]\"></el-image>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"审核状态\">\n          <template v-slot=\"scope\">\n            <el-tag type=\"warning\" v-if=\"scope.row.status === '待审核'\">待审核</el-tag>\n            <el-tag type=\"success\" v-if=\"scope.row.status === '审核通过'\">审核通过</el-tag>\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '审核未通过'\">审核未通过</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"reason\" label=\"审核理由\" show-overflow-tooltip></el-table-column>\n\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n          <template v-slot=\"scope\">\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">审核</el-button>\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n    <el-dialog title=\"审核\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"name\" label=\"名字\">\n          <el-input v-model=\"form.name\" placeholder=\"名字\" disabled></el-input>\n        </el-form-item>\n        <el-form-item prop=\"status\" label=\"审核状态\">\n          <el-select style=\"width: 100%\" v-model=\"form.status\">\n            <el-option v-for=\"item in ['待审核','审核通过','审核未通过']\" :key=\"item\" :value=\"item\"\n                       :label=\"item\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item prop=\"reason\" label=\"审核理由\">\n          <el-input type=\"textarea\" placeholder=\"审核理由\" v-model=\"form.reason\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Certification\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      userList: [],\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      name: null,\n      address: null,\n      cardNo: null,\n      phone: null,\n      userId: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      ids: [],\n      rules: {}\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/certification/update' : '/certification/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              console.log(res.code)\n              console.log(res.msg)\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/certification/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)   //  [1,2]\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/certification/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/certification/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          phone: this.phone,\n          cardNo: this.cardNo,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.name = null\n      this.cardNo = null\n      this.phone = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}