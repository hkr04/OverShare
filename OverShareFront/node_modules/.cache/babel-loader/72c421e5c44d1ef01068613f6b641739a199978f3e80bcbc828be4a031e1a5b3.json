{"ast":null,"code":"import E from \"wangeditor\";\nimport hljs from 'highlight.js';\nexport default {\n  name: \"Activity\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      host: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入活动名称',\n          trigger: 'blur'\n        }],\n        descr: [{\n          required: true,\n          message: '请输入活动简介',\n          trigger: 'blur'\n        }],\n        start: [{\n          required: true,\n          message: '请输入活动开始时间',\n          trigger: 'blur'\n        }],\n        end: [{\n          required: true,\n          message: '请输入活动结束时间',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入活动地址',\n          trigger: 'blur'\n        }],\n        host: [{\n          required: true,\n          message: '请输入活动主办方',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      editor: null,\n      content: '',\n      fromVisible1: false\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    handleCoverSuccess(res) {\n      this.form.cover = res.data;\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.setRichText(''); // 初始化富文本编辑器\n      this.fromVisible = true; // 打开弹窗\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.setRichText(this.form.content); // 初始化富文本编辑器\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.content = this.editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/activity/update' : '/activity/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/activity/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/activity/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/activity/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          host: this.host\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.host = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    setRichText(content) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`);\n        this.editor.highlight = hljs;\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload';\n        this.editor.config.uploadFileName = 'file';\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        };\n        this.editor.config.uploadImgParams = {\n          type: 'img'\n        };\n        this.editor.create(); // 创建\n        this.editor.txt.html(content);\n      });\n    },\n    handleActivityContent(content) {\n      this.content = content;\n      this.fromVisible1 = true;\n    }\n  }\n};","map":{"version":3,"names":["E","hljs","name","data","tableData","pageNum","pageSize","total","host","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","descr","start","end","address","ids","editor","content","fromVisible1","created","load","methods","handleCoverSuccess","res","cover","handleAdd","setRichText","handleEdit","row","stringify","save","$refs","formRef","validate","valid","txt","html","$request","url","id","method","then","code","$message","success","error","msg","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange","$nextTick","highlight","config","uploadImgServer","$baseUrl","uploadFileName","uploadImgHeaders","token","uploadImgParams","create","handleActivityContent"],"sources":["src/views/manager/Activity.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入活动标题查询\" style=\"width: 200px\" v-model=\"name\"></el-input>\n      <el-input placeholder=\"请输入主办方查询\" style=\"width: 200px; margin-left: 5px\" v-model=\"host\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"name\" label=\"活动名称\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"descr\" label=\"活动简介\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"cover\" label=\"封面\">\n          <template v-slot=\"scope\">\n            <div style=\"display: flex; align-items: center\">\n              <el-image style=\"width: 50px; height: 30px; border-radius: 5px\" v-if=\"scope.row.cover\"\n                        :src=\"scope.row.cover\" :preview-src-list=\"[scope.row.cover]\"></el-image>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"start\" label=\"开始时间\"></el-table-column>\n        <el-table-column prop=\"end\" label=\"结束时间\"></el-table-column>\n        <el-table-column prop=\"form\" label=\"活动形式\"></el-table-column>\n        <el-table-column prop=\"address\" label=\"活动地址\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"host\" label=\"主办方\"></el-table-column>\n        <el-table-column prop=\"readCount\" label=\"浏览量\"></el-table-column>\n        <el-table-column label=\"活动内容\" width=\"150px\">\n          <template v-slot=\"scope\">\n            <div>\n              <el-button @click=\"handleActivityContent(scope.row.content)\">查看活动内容</el-button>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n          <template v-slot=\"scope\">\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n\n    <el-dialog title=\"活动信息\" :visible.sync=\"fromVisible\" width=\"70%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"name\" label=\"活动标题\">\n          <el-input v-model=\"form.name\" placeholder=\"活动标题\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"descr\" label=\"活动简介\">\n          <el-input v-model=\"form.descr\" placeholder=\"活动简介\" type=\"textarea\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"cover\" label=\"封面\">\n          <el-upload\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{token:user.token}\"\n              list-type=\"picture\"\n              :on-success=\"handleCoverSuccess\">\n            <el-button type=\"primary\">上传封面</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item prop=\"start\" label=\"开始时间\">\n          <el-date-picker\n              v-model=\"form.start\"\n              type=\"date\"\n              placeholder=\"请选择活动开始时间\"\n              value-format=\"yyyy-MM-dd\"\n              format=\"yyyy-MM-dd\"\n          />\n        </el-form-item>\n        <el-form-item prop=\"end\" label=\"结束时间\">\n          <el-date-picker\n              v-model=\"form.end\"\n              type=\"date\"\n              placeholder=\"请选择活动结束时间\"\n              value-format=\"yyyy-MM-dd\"\n              format=\"yyyy-MM-dd\"\n          />\n        </el-form-item>\n        <el-form-item label=\"活动形式\" prop=\"form\">\n          <el-select style=\"width: 100%\" v-model=\"form.form\">\n            <el-option value=\"线上\"></el-option>\n            <el-option value=\"线下\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item prop=\"address\" label=\"活动地址\">\n          <el-input v-model=\"form.address\" placeholder=\"活动地址\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"host\" label=\"主办方\">\n          <el-input v-model=\"form.host\" placeholder=\"主办方\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"content\" label=\"活动内容\">\n          <div id=\"editor\"></div>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"活动内容\" :visible.sync=\"fromVisible1\" width=\"70%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <div class=\"w-e-text\">\n        <div v-html=\"content\"></div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible1 = false\">关 闭</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\nimport E from \"wangeditor\"\nimport hljs from 'highlight.js'\n\nexport default {\n  name: \"Activity\",\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      name: null,\n      host:null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [\n          {required: true, message: '请输入活动名称', trigger: 'blur'},\n        ],\n        descr: [\n          {required: true, message: '请输入活动简介', trigger: 'blur'},\n        ],\n        start: [\n          {required: true, message: '请输入活动开始时间', trigger: 'blur'},\n        ],\n        end: [\n          {required: true, message: '请输入活动结束时间', trigger: 'blur'},\n        ],\n        address: [\n          {required: true, message: '请输入活动地址', trigger: 'blur'},\n        ],\n        host: [\n          {required: true, message: '请输入活动主办方', trigger: 'blur'},\n        ],\n      },\n      ids: [],\n      editor: null,\n      content: '',\n      fromVisible1: false\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    handleCoverSuccess(res) {\n      this.form.cover = res.data\n    },\n    handleAdd() {   // 新增数据\n      this.form = {}  // 新增数据的时候清空数据\n      this.setRichText('')   // 初始化富文本编辑器\n      this.fromVisible = true   // 打开弹窗\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.setRichText(this.form.content) // 初始化富文本编辑器\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.content = this.editor.txt.html()\n          this.$request({\n            url: this.form.id ? '/activity/update' : '/activity/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/activity/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)   //  [1,2]\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/activity/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/activity/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n          host: this.host\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.name = null\n      this.host = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n    setRichText(content) {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`)\n        this.editor.highlight = hljs\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        }\n        this.editor.config.uploadImgParams = {\n          type: 'img',\n        }\n        this.editor.create()  // 创建\n        this.editor.txt.html(content)\n      })\n    },\n    handleActivityContent(content){\n      this.content = content\n      this.fromVisible1 = true\n    }\n  }\n}\n</script>\n\n<style scoped>\n.w-e-text img {\n  width: 100% !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}