{"ast":null,"code":"import Circulars from \"@/components/Circulars.vue\";\nexport default {\n  name: \"Comment\",\n  components: {\n    Circulars\n  },\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      content: null,\n      userName: null,\n      userId: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      visible: false,\n      isVisible: true,\n      circularsUserid: null\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    updateCircularsUserId(userId) {\n      this.circularsUserid = userId;\n    },\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        console.log(this.form);\n        if (valid) {\n          this.$request({\n            url: '/comment/update',\n            method: 'PUT',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/comment/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n            //发送通知给用户\n            this.visible = true;\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n        this.visible = false;\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/comment/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/comment/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          content: this.content,\n          userName: this.userName,\n          userId: this.userId\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.content = null;\n      this.userName = null;\n      this.userId = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["Circulars","name","components","data","tableData","pageNum","pageSize","total","content","userName","userId","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","ids","visible","isVisible","circularsUserid","created","load","methods","updateCircularsUserId","handleEdit","row","stringify","save","$refs","formRef","validate","valid","console","log","$request","url","method","then","res","code","$message","success","error","msg","del","id","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","get","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Comment.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"search\">\n      <el-input placeholder=\"请输入评论内容查询\" style=\"width: 200px\" v-model=\"content\"></el-input>\n      <el-input placeholder=\"请输入评论人查询\" style=\"width: 200px;margin-left: 5px\" v-model=\"userName\"></el-input>\n      <el-input placeholder=\"请输入评论人ID查询\" style=\"width: 200px;margin-left: 5px\" v-model=\"userId\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div class=\"operation\">\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n    </div>\n\n    <div class=\"table\">\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\n        <el-table-column prop=\"content\" label=\"评论内容\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"userId\" label=\"评论人ID\"></el-table-column>\n        <el-table-column prop=\"userName\" label=\"评论人\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"pid\" label=\"父级评论ID\"></el-table-column>\n        <el-table-column prop=\"rootId\" label=\"根级评论ID\"></el-table-column>\n        <el-table-column prop=\"fid\" label=\"关联评论ID\"></el-table-column>\n        <el-table-column prop=\"time\" label=\"评论时间\" width=\"140px\"></el-table-column>\n        <el-table-column prop=\"module\" label=\"评论模块\"></el-table-column>\n\n        <el-table-column label=\"操作\" width=\"180\" align=\"center\">\n          <template v-slot=\"scope\">\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\n            <el-button plain type=\"danger\" size=\"mini\" @click=\"del(scope.row.id); updateCircularsUserId(scope.row.userId)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div class=\"pagination\">\n        <el-pagination\n            background\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"pageNum\"\n            :page-sizes=\"[5, 10, 20]\"\n            :page-size=\"pageSize\"\n            layout=\"total, prev, pager, next\"\n            :total=\"total\">\n        </el-pagination>\n      </div>\n    </div>\n\n\n    <el-dialog title=\"评论信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"content\" label=\"内容\">\n          <el-input type=\"textarea\" :rows=\"5\" v-model=\"form.content\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"userId\" label=\"评论人ID\">\n          <el-input v-model=\"form.userId\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"pid\" label=\"父级评论ID\">\n          <el-input v-model=\"form.pid\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"rootId\" label=\"根级评论ID\">\n          <el-input v-model=\"form.rootId\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"fid\" label=\"关联评论ID\">\n          <el-input v-model=\"form.fid\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"module\" label=\"评论模块\">\n          <el-input v-model=\"form.module\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <div v-if=\"visible\">\n      <Circulars :userId=\"circularsUserid\" :visible=\"isVisible\" @close=\"visible = false\"></Circulars>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\nimport Circulars from \"@/components/Circulars.vue\";\n\nexport default {\n  name: \"Comment\",\n  components: {Circulars},\n  data() {\n    return {\n      tableData: [],  // 所有的数据\n      pageNum: 1,   // 当前的页码\n      pageSize: 10,  // 每页显示的个数\n      total: 0,\n      content: null,\n      userName: null,\n      userId: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {},\n      ids: [],\n      visible: false,\n      isVisible: true,\n      circularsUserid: null\n    }\n  },\n  created() {\n    this.load(1)\n  },\n  methods: {\n    updateCircularsUserId(userId) {\n      this.circularsUserid = userId;\n    },\n    handleEdit(row) {   // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true   // 打开弹窗\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate((valid) => {\n        console.log(this.form)\n        if (valid) {\n          this.$request({\n            url: '/comment/update',\n            method: 'PUT',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              this.$message.success('保存成功')\n              this.load(1)\n              this.fromVisible = false\n            } else {\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    del(id) {   // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/comment/delete/' + id).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n            //发送通知给用户\n            this.visible = true\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n        this.visible = false\n      }).catch(() => {\n      })\n    },\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id)   //  [1,2]\n    },\n    delBatch() {   // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据')\n        return\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\n        this.$request.delete('/comment/delete/batch', {data: this.ids}).then(res => {\n          if (res.code === '200') {   // 表示操作成功\n            this.$message.success('操作成功')\n            this.load(1)\n          } else {\n            this.$message.error(res.msg)  // 弹出错误的信息\n          }\n        })\n      }).catch(() => {\n      })\n    },\n    load(pageNum) {  // 分页查询\n      if (pageNum) this.pageNum = pageNum\n      this.$request.get('/comment/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          content: this.content,\n          userName: this.userName,\n          userId: this.userId,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list\n        this.total = res.data?.total\n      })\n    },\n    reset() {\n      this.content = null\n      this.userName = null\n      this.userId = null\n      this.load(1)\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum)\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}