{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'));\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'));\n      } else {\n        callback();\n      }\n    };\n    //自定义的邮箱和手机验证规则\n    let checkEmail = (rule, value, callback) => {\n      //验证邮箱\n      const regEmail = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\n      if (this.user.email != '' && !regEmail.test(this.user.email)) {\n        callback(new Error('请输入有效的邮箱'));\n      }\n    };\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      dialogVisible: false,\n      rules: {\n        phone: [{\n          required: true,\n          message: \"请输入联系方式\",\n          trigger: \"blur\"\n        }, {\n          min: 11,\n          max: 11,\n          message: \"请输入11位手机号码\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/,\n          //pattern: /^1[3456789]\\d{9}$/,\n          message: \"请输入正确的手机号码\"\n        }],\n        email: [{\n          required: true,\n          message: '邮箱不能为空',\n          trigger: 'blur'\n        }, {\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入原始密码',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          validator: validatePassword,\n          required: true,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    update() {\n      // 保存当前的用户信息到数据库\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          // 成功更新\n          this.$message.success('保存成功');\n          // 更新浏览器缓存里的用户信息\n          localStorage.setItem('xm-user', JSON.stringify(this.user));\n\n          // 触发父级的数据更新\n          this.$emit('update:user');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.$set(this.user, 'avatar', response.data);\n    },\n    // 修改密码\n    updatePassword() {\n      this.dialogVisible = true;\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              // 成功更新\n              this.$message.success('修改密码成功');\n              this.$router.push('/login');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","validatePassword","rule","value","callback","Error","user","newPassword","checkEmail","regEmail","email","test","JSON","parse","localStorage","getItem","dialogVisible","rules","phone","required","message","trigger","min","max","pattern","validator","password","confirmPassword","created","methods","update","$request","put","then","res","code","$message","success","setItem","stringify","$emit","error","msg","handleAvatarSuccess","response","file","fileList","$set","updatePassword","save","$refs","formRef","validate","valid","$router","push"],"sources":["src/components/PersonPage.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card>\n      <div style=\"text-align: right; margin-bottom: 20px\">\n        <el-button type=\"primary\" @click=\"updatePassword\">修改密码</el-button>\n      </div>\n      <el-form :model=\"user\" label-width=\"80px\" style=\"padding-right: 20px\" :rules=\"rules\">\n        <div style=\"margin: 15px; text-align: center\">\n          <el-upload\n              class=\"avatar-uploader\"\n              :action=\"$baseUrl + '/files/upload'\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n          >\n            <img v-if=\"user.avatar\" :src=\"user.avatar\" class=\"avatar\"/>\n            <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n          </el-upload>\n        </div>\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"user.username\" placeholder=\"用户名\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"user.name\" placeholder=\"姓名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"user.phone\" placeholder=\"电话\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"user.email\" placeholder=\"邮箱\"></el-input>\n        </el-form-item>\n        <div style=\"text-align: center; margin-bottom: 20px\">\n          <el-button type=\"primary\" @click=\"update\">保 存</el-button>\n        </div>\n      </el-form>\n    </el-card>\n\n    <el-dialog title=\"修改密码\" :visible.sync=\"dialogVisible\" width=\"30%\" :close-on-click-modal=\"false\"\n               destroy-on-close>\n      <el-form :model=\"user\" label-width=\"80px\" style=\"padding-right: 20px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"原始密码\" prop=\"password\">\n          <el-input show-password v-model=\"user.password\" placeholder=\"原始密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\n          <el-input show-password v-model=\"user.newPassword\" placeholder=\"新密码\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input show-password v-model=\"user.confirmPassword\" placeholder=\"确认密码\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请确认密码'))\n      } else if (value !== this.user.newPassword) {\n        callback(new Error('确认密码错误'))\n      } else {\n        callback()\n      }\n    }\n    //自定义的邮箱和手机验证规则\n    let checkEmail = (rule, value, callback) => {//验证邮箱\n      const regEmail = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\n      if (this.user.email != '' && !regEmail.test(this.user.email)) {\n        callback(new Error('请输入有效的邮箱'));\n      }\n    }\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      dialogVisible: false,\n\n      rules: {\n        phone: [\n          {required: true, message: \"请输入联系方式\", trigger: \"blur\"},\n          {min: 11, max: 11, message: \"请输入11位手机号码\", trigger: \"blur\"},\n          {\n            pattern: /^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$/,\n            //pattern: /^1[3456789]\\d{9}$/,\n            message: \"请输入正确的手机号码\",\n          },\n        ],\n        email: [\n          {required: true, message: '邮箱不能为空', trigger: 'blur'},\n          {\n            validator: checkEmail, trigger: 'blur'\n          }\n        ],\n        password: [\n          {required: true, message: '请输入原始密码', trigger: 'blur'},\n        ],\n        newPassword: [\n          {required: true, message: '请输入新密码', trigger: 'blur'},\n        ],\n        confirmPassword: [\n          {validator: validatePassword, required: true, trigger: 'blur'},\n        ],\n      }\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    update() {\n      // 保存当前的用户信息到数据库\n      this.$request.put('/user/update', this.user).then(res => {\n        if (res.code === '200') {\n          // 成功更新\n          this.$message.success('保存成功')\n          // 更新浏览器缓存里的用户信息\n          localStorage.setItem('xm-user', JSON.stringify(this.user))\n\n          // 触发父级的数据更新\n          this.$emit('update:user')\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleAvatarSuccess(response, file, fileList) {\n      // 把user的头像属性换成上传的图片的链接\n      this.$set(this.user, 'avatar', response.data)\n    },\n    // 修改密码\n    updatePassword() {\n      this.dialogVisible = true\n    },\n    save() {\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request.put('/updatePassword', this.user).then(res => {\n            if (res.code === '200') {\n              // 成功更新\n              this.$message.success('修改密码成功')\n              this.$router.push('/login')\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n/deep/ .el-form-item__label {\n  font-weight: bold;\n}\n\n/deep/ .el-upload {\n  border-radius: 50%;\n}\n\n/deep/ .avatar-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  border-radius: 50%;\n}\n\n/deep/ .avatar-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n\n.avatar-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 120px;\n  height: 120px;\n  line-height: 120px;\n  text-align: center;\n  border-radius: 50%;\n}\n\n.avatar {\n  width: 120px;\n  height: 120px;\n  display: block;\n  border-radius: 50%;\n}\n</style>"],"mappings":";AA0DA;EACAA,KAAA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,IAAA,CAAAC,WAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;IACA,IAAAI,UAAA,GAAAA,CAAAN,IAAA,EAAAC,KAAA,EAAAC,QAAA;MAAA;MACA,MAAAK,QAAA;MACA,SAAAH,IAAA,CAAAI,KAAA,WAAAD,QAAA,CAAAE,IAAA,MAAAL,IAAA,CAAAI,KAAA;QACAN,QAAA,KAAAC,KAAA;MACA;IACA;IACA;MACAC,IAAA,EAAAM,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,aAAA;MAEAC,KAAA;QACAC,KAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,GACA;UACAG,OAAA;UACA;UACAJ,OAAA;QACA,EACA;QACAV,KAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAI,SAAA,EAAAjB,UAAA;UAAAa,OAAA;QACA,EACA;QACAK,QAAA,GACA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAd,WAAA,GACA;UAAAY,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAM,eAAA,GACA;UAAAF,SAAA,EAAAxB,gBAAA;UAAAkB,QAAA;UAAAE,OAAA;QAAA;MAEA;IACA;EACA;EACAO,QAAA,GAEA;EACAC,OAAA;IACAC,OAAA;MACA;MACA,KAAAC,QAAA,CAAAC,GAAA,sBAAA1B,IAAA,EAAA2B,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA;UACAvB,YAAA,CAAAwB,OAAA,YAAA1B,IAAA,CAAA2B,SAAA,MAAAjC,IAAA;;UAEA;UACA,KAAAkC,KAAA;QACA;UACA,KAAAJ,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;QACA;MACA;IACA;IACAC,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA;MACA,KAAAC,IAAA,MAAAzC,IAAA,YAAAsC,QAAA,CAAA5C,IAAA;IACA;IACA;IACAgD,eAAA;MACA,KAAAhC,aAAA;IACA;IACAiC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAtB,QAAA,CAAAC,GAAA,yBAAA1B,IAAA,EAAA2B,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAiB,OAAA,CAAAC,IAAA;YACA;cACA,KAAAnB,QAAA,CAAAK,KAAA,CAAAP,GAAA,CAAAQ,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}